name: Web app pipeline

on:
  workflow_dispatch:

  push:
    branches:
      - 'day5'
    paths:
      - 'codeacademy-nextjs/**'
      - '.github/workflows/pipeline.yaml'

env:
  REGISTRY: ${{vars.AWS_ACCOUNT_ID}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com

jobs:
  build_and_push_to_ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{secrets.AWS_ACCESS_KEY_ID}}
          password: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      
      - name: Create app environment variables file
        run: |
          touch .env.production

          echo "NEXT_PUBLIC_FIREBASE_WEB_APP_API_KEY=${{ secrets.FIREBASE_WEB_APP_API_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> .env.production
          echo "NEXT_PUBLIC_PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env.production
          echo "NEXT_PUBLIC_STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_WEB_APP_SENDER_ID=${{ secrets.FIREBASE_WEB_APP_SENDER_ID }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_WEB_APP_APP_ID=${{ secrets.FIREBASE_WEB_APP_APP_ID }}" >> .env.production

          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.production
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env.production
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env.production
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.production

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./
          file: ./Dockerfile
          tags: |
            ${{ env.REGISTRY }}/coeacademy-nextjs:latest
            ${{ env.REGISTRY }}/coeacademy-nextjs:${{ github.sha }}
          #secrets: |
          #  "FIREBASE_WEB_APP_API_KEY=${{ secrets.FIREBASE_WEB_APP_API_KEY }}"
          #  "AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}"
          #  "PROJECT_ID=${{ secrets.PROJECT_ID }}"
          #  "STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}"
          #  "FIREBASE_WEB_APP_SENDER_ID=${{ secrets.FIREBASE_WEB_APP_SENDER_ID }}"
          #  "FIREBASE_WEB_APP_APP_ID=${{ secrets.FIREBASE_WEB_APP_APP_ID }}"
          #  "FIREBASE_PROJECT_ID=${{secrets.FIREBASE_PROJECT_ID}}"
          #  "FIREBASE_CLIENT_EMAIL=${{secrets.FIREBASE_CLIENT_EMAIL}}"
          #  "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}"
          #  "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_ecr

    steps:
      - name: Get public IP 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
        run: |
          ip_address=$(aws ec2 describe-instances --filters 'Name=tag:Name,Values=${{ vars.EC2_NAME }}' --query 'Reservations[].Instances[].PublicIpAddress' --output text)
          echo "EC2_PUBLIC_IP=$ip_address" >> $GITHUB_ENV

      - name: Pull latest in EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: 'ec2-user'
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            aws ecr get-login-password | docker login --username AWS --password-stdin ${{ env.REGISTRY }}
            docker pull ${{ env.REGISTRY }}/coeacademy-nextjs:latest
            docker rm --force ui_app
            docker run -d --name ui_app -p 80:80 ${{ env.REGISTRY }}/coeacademy-nextjs:latest